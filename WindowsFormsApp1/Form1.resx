<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAA
        AACRh5IApp2mAIJzewC7ssAAtsK6AMzbxQBuY3AAyt/IAK+hqQCHe4EAsKqgALrMvQDDvMMA0d3UANDe
        1wCotrIAqbayALWxrAB7bnYAwdPAAMPSvQDIxsYA2d/aAKCZpAC0ta8AwtLGALG8sgCRhY0AgHBzANrj
        3QBoXWgApJqnALy0rACywLUAkoeTALuzuwDd5+AAvLmyALXDtQDK2sMAoKqqAK2gngBuYWsAy9XPAL6/
        sgDN1c8Awbi4AJuMkACqraoApbKwAJiVmQC7x8EAYFZdAKi2swDW2tUAsai2ANHi2wCelqUAZVtjALiu
        rQDV494A2OLbAJKEiwC6sa0AsLu5AMPYxwC4tLYAurG/AH91gwConqsApKyoAKqirgDAwrMAd2dsAKuy
        qAC/zbkAjoCAAJ6UoABkWmEAsbeuANPj3wBmW2QAt620AMfRvADY6NwAaV1qAJKIjwDL0cUAbWBqAJiK
        jABtYW0AraCgAIV3eAC2xLoAcWNqAJaMmwDO2csA0dTOAKuirwBfVVwAzd/UAJyTlQCvp7UAsqivAL3O
        vQB3aXMAdmxzAMbEugDP5dQAnJaeAHtqbQDGx7oAemtwAGNXYgDS5tcA2trXAIyBjQCimKQA1eXdANjl
        3QBoXmUAt6+7ALa6rwCUipYAb2JoAKCsqgBwYmgAcGNrAMreyQCnrKoAiXp5AMnizACaj5wAxb7EAGJW
        YAC0qLAAY1lgAGRZYACtua0Axc27ALmrsACgnJ8Ata22ALC5tgDZ6N4AxdnEAH9zgAClnasAwLO2AHFh
        ZgDQ0M0AzNzNAKuisQCDeYkAwLm/AMDAuQCyo6sAh3yJAMPFtgCmtbQAjX2DAKe1tAC/y8gArri0ANbn
        3ADI0b8A3OHcAI6GlQDa6N8AtLy3ANrp4gCjp6YAlImVAMC3sQCDd4QAyd/OALGkpgB0Zm0AX1RcAM7c
        1wDN39cA0uDaAMTMugDHxMYA0+jXALWvtQB/b3YA1uXgAKKioQC5sbsA0M3PANHNzwB1ZWsAvMS+AHRo
        dACZmZkAdGl3AKq2sABjWGAAjIGIANHn1QCtt7MA0+PbAJ6hnwCwuLYAr8CzANfo4QC5srYApJuoANno
        4QDa6OEApZ6oALu3swBvYGYAxt3KAJiKkQCGdnoAmY6LALnAvABvZWwArqefAKqhsQCckYsAvr28ALvH
        tgDK5M0AinuAAMzg0wCwqqgAz+DTANPa0wCusKgAwsi5AKGWkQCwqLQA2NjWAKu2sQCus7EAtq+lALOr
        tACjlpoAn5ajAHhtewDAzcgAtKy3AMbJxQDU5N8AsruuAKeblwCinKMAlIaGALC7twAAAAAAAAAAAAAA
        AAAAAAAAUmeHCJyMlC7UGE8aIQTa7VbHGz7X8LA7EedKis1dwatq2xICoC9bPyV69yYLGSuBeImxuuJZ
        Ka1r6OBoQeV3zIhjXnDY+vggb7ZLE9ZyqI/GsnzAHEzp7p6LFJGDuJCjTjR+lW6C3gpIUycH4chUyTrG
        f9VJXNncLKUFgINspOxRhipYaQll5JtXYJev43YQHnEGxEQAAc8VYeYNZLRQoVpV8pmn8e8MvusWPco4
        9p/Cwp1fOUe9hb9zpiSqzrs1kq6EYur0I5q3ljYd0tE8D3QiRQNDeY65Qt/1LQ61szGsex83ZkfT+Y28
        MKkz86J9dU3QmN2TF20yw8tGxftAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>